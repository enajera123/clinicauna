/**
* author: arayaroma
* Model: clinicauna
* Database: Oracle 21c XE
*/

/**
*
* TABLES
*/
-- TABLE TBL_GENERAL_INFORMATION
CREATE TABLE CLINICAUNA."TBL_GENERAL_INFORMATION" (
    "ID" NUMBER(38, 0) NOT NULL ENABLE,
    "NAME" VARCHAR2(32) NOT NULL ENABLE,
    "EMAIL" VARCHAR2(64) NOT NULL ENABLE,
    "PHOTO" BLOB,
    "HTMLTEMPLATE" CLOB,
    "VERSION" NUMBER(38, 0) NOT NULL ENABLE,
    CONSTRAINT "TBL_GENERAL_INFORMATION_PK" PRIMARY KEY ("ID") USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS TABLESPACE "USERS" ENABLE
) SEGMENT CREATION DEFERRED PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING TABLESPACE "USERS" LOB (
    "PHOTO"
) STORE AS SECUREFILE (
    TABLESPACE "USERS" ENABLE STORAGE IN ROW 4000 CHUNK 8192 NOCACHE LOGGING NOCOMPRESS KEEP_DUPLICATES
) LOB (
    "HTMLTEMPLATE"
) STORE AS SECUREFILE (
    TABLESPACE "USERS" ENABLE STORAGE IN ROW 4000 CHUNK 8192 NOCACHE LOGGING NOCOMPRESS KEEP_DUPLICATES
);

-- TABLE TBL_USER
CREATE TABLE CLINICAUNA."TBL_USER" (
    "ID" NUMBER(38, 0) NOT NULL ENABLE,
    "USERNAME" VARCHAR2(20) NOT NULL ENABLE,
    "PASSWORD" VARCHAR2(16) NOT NULL ENABLE,
    "NAME" VARCHAR2(32) NOT NULL ENABLE,
    "FIRSTLASTNAME" VARCHAR2(32) NOT NULL ENABLE,
    "SECONDLASTNAME" VARCHAR2(32) NOT NULL ENABLE,
    "IDENTIFICATION" VARCHAR2(16) NOT NULL ENABLE,
    "EMAIL" VARCHAR2(128) NOT NULL ENABLE,
    "ROLE" VARCHAR2(13) NOT NULL ENABLE,
    "PHONENUMBER" VARCHAR2(16) NOT NULL ENABLE,
    "ISACTIVE" CHAR(1) DEFAULT 'N' NOT NULL ENABLE,
    "ISADMIN" CHAR(1) DEFAULT 'N' NOT NULL ENABLE,
    "PASSWORDCHANGED" CHAR(1) DEFAULT 'N' NOT NULL ENABLE,
    "ACTIVATIONCODE" VARCHAR2(100),
    "LANGUAGE" VARCHAR2(12) NOT NULL ENABLE,
    "PROFILEPHOTO" BLOB,
    "VERSION" NUMBER(38, 0) NOT NULL ENABLE,
    CONSTRAINT "TBL_USER_PK" PRIMARY KEY ("ID") USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS TABLESPACE "USERS" ENABLE,
    CONSTRAINT "TBL_USER_USERNAME_UK" UNIQUE ("USERNAME") USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS TABLESPACE "USERS" ENABLE,
    CONSTRAINT "TBL_USER_IDENTIFICATION_UK" UNIQUE ("IDENTIFICATION") USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS TABLESPACE "USERS" ENABLE,
    CONSTRAINT "TBL_USER_ISADMIN_CHECK" CHECK (ISADMIN IN ('N', 'Y')) ENABLE,
    CONSTRAINT "TBL_USER_ISACTIVE_CHECK" CHECK (ISACTIVE IN ('N', 'Y')) ENABLE,
    CONSTRAINT "TBL_USER_PASSWORDCHANGED_CHECK" CHECK (ISACTIVE IN ('N', 'Y')) ENABLE,
    CONSTRAINT "TBL_USER_ROLE_CHECK" CHECK (ROLE IN ('ADMINISTRATOR', 'RECEPCIONIST', 'DOCTOR')) ENABLE,
    CONSTRAINT "TBL_USER_LANGUAGE_CHECK" CHECK (LANGUAGE IN ('ENGLISH', 'SPANISH')) ENABLE
) SEGMENT CREATION DEFERRED PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING TABLESPACE "USERS" LOB (
    "PROFILEPHOTO"
) STORE AS SECUREFILE (
    TABLESPACE "USERS" ENABLE STORAGE IN ROW 4000 CHUNK 8192 NOCACHE LOGGING NOCOMPRESS KEEP_DUPLICATES
);

-- TABLE TBL_DOCTOR
CREATE TABLE CLINICAUNA."TBL_DOCTOR" (
    "ID" NUMBER(38, 0) NOT NULL ENABLE,
    "CODE" VARCHAR2(10) NOT NULL ENABLE,
    "IDCARD" NUMBER(38, 0) NOT NULL ENABLE,
    "SHIFTSTARTTIME" VARCHAR2(5) NOT NULL ENABLE,
    "SHIFTENDTIME" VARCHAR2(5) NOT NULL ENABLE,
    "HOURLYSLOTS" NUMBER(38, 0) NOT NULL ENABLE,
    "VERSION" NUMBER(38, 0) NOT NULL ENABLE,
    CONSTRAINT "TBL_DOCTOR_PK" PRIMARY KEY ("ID") USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS TABLESPACE "USERS" ENABLE,
    CONSTRAINT "TBL_DOCTOR_CODE_UK" UNIQUE ("CODE") USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS TABLESPACE "USERS" ENABLE,
    CONSTRAINT "TBL_DOCTOR_IDCARD_UK" UNIQUE ("IDCARD") USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS TABLESPACE "USERS" ENABLE
) SEGMENT CREATION DEFERRED PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING TABLESPACE "USERS";

-- TABLE TBL_AGENDA
CREATE TABLE CLINICAUNA."TBL_AGENDA" (
    "ID" NUMBER(38, 0) NOT NULL ENABLE,
    "DOCTOR" NUMBER(38, 0) NOT NULL ENABLE,
    "AGENDADATE" DATE NOT NULL ENABLE,
    "SHIFTSTARTTIME" VARCHAR2(5) NOT NULL ENABLE,
    "SHIFTENDTIME" VARCHAR2(5) NOT NULL ENABLE,
    "HOURLYSLOTS" NUMBER(38, 0) NOT NULL ENABLE,
    "VERSION" NUMBER(38, 0) NOT NULL ENABLE,
    CONSTRAINT "TBL_AGENDA_PK" PRIMARY KEY ("ID") USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS TABLESPACE "USERS" ENABLE
) SEGMENT CREATION DEFERRED PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING TABLESPACE "USERS";

-- TABLE TBL_MEDICAL_APPOINTMENT
CREATE TABLE CLINICAUNA."TBL_MEDICAL_APPOINTMENT" (
    "ID" NUMBER(38, 0) NOT NULL ENABLE,
    "AGENDA" NUMBER(38, 0) NOT NULL ENABLE,
    "PATIENT" NUMBER(38, 0) NOT NULL ENABLE,
    "PATIENTCARE" NUMBER(38, 0),
    "SCHEDULEDBY" NUMBER(38, 0) NOT NULL ENABLE,
    "SLOTSNUMBER" NUMBER(38, 0) NOT NULL ENABLE,
    "SCHEDULEDDATE" DATE NOT NULL ENABLE,
    "SCHEDULEDSTARTTIME" VARCHAR2(5) NOT NULL ENABLE,
    "SCHEDULEDENDTIME" VARCHAR2(5) NOT NULL ENABLE,
    "STATE" VARCHAR2(9) NOT NULL ENABLE,
    "REASON" VARCHAR2(256),
    "PATIENTPHONENUMBER" VARCHAR2(16),
    "PATIENTEMAIL" VARCHAR2(128),
    "VERSION" NUMBER(38, 0) NOT NULL ENABLE,
    CONSTRAINT "TBL_APPOINTMENT_PK" PRIMARY KEY ("ID") USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS TABLESPACE "USERS" ENABLE,
    CONSTRAINT "TBL_APPOINTMENT_STATE_CHECK" CHECK (STATE IN ('SCHEDULED', 'ATTENDED', 'CANCELLED', 'ABSENT')) ENABLE,
    CONSTRAINT "TBL_APPOINTMENT_SLOTSNUMBER_CHECK" CHECK (SLOTSNUMBER IN (1, 2, 3, 4)) ENABLE
) SEGMENT CREATION DEFERRED PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING TABLESPACE "USERS";

-- TABLE TBL_PATIENT
CREATE TABLE CLINICAUNA."TBL_PATIENT" (
    "ID" NUMBER(38, 0) NOT NULL ENABLE,
    "NAME" VARCHAR2(32) NOT NULL ENABLE,
    "FIRSTLASTNAME" VARCHAR2(32) NOT NULL ENABLE,
    "SECONDLASTNAME" VARCHAR2(32) NOT NULL ENABLE,
    "IDENTIFICATION" VARCHAR2(16) NOT NULL ENABLE,
    "PHONENUMBER" VARCHAR2(16) NOT NULL ENABLE,
    "EMAIL" VARCHAR2(128) NOT NULL ENABLE,
    "GENDER" VARCHAR2(6) NOT NULL ENABLE,
    "BIRTHDATE" DATE NOT NULL ENABLE,
    "LANGUAGE" VARCHAR2(12) NOT NULL ENABLE,
    "VERSION" NUMBER(38, 0) NOT NULL ENABLE,
    CONSTRAINT "TBL_PATIENT_PK" PRIMARY KEY ("ID") USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS TABLESPACE "USERS" ENABLE,
    CONSTRAINT "TBL_PATIENT_IDENTIFICATION_UK" UNIQUE ("IDENTIFICATION") USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS TABLESPACE "USERS" ENABLE,
    CONSTRAINT "TBL_PATIENT_GENDER_CHECK" CHECK (GENDER IN ('MALE', 'FEMALE')) ENABLE
) SEGMENT CREATION DEFERRED PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING TABLESPACE "USERS";

-- TABLE TBL_PATIENT_FAMILY_HISTORY
CREATE TABLE CLINICAUNA."TBL_PATIENT_FAMILY_HISTORY" (
    "ID" NUMBER(38, 0) NOT NULL ENABLE,
    "PATIENT" NUMBER(38, 0) NOT NULL ENABLE,
    "DISEASE" VARCHAR2(64),
    "RELATIONSHIP" VARCHAR2(64),
    "VERSION" NUMBER(38, 0) NOT NULL ENABLE,
    CONSTRAINT "TBL_PATIENT_FAMILY_HISTORY_PK" PRIMARY KEY ("ID") USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS TABLESPACE "USERS" ENABLE
) SEGMENT CREATION DEFERRED PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING TABLESPACE "USERS";

-- TABLE TBL_PATIENT_PERSONAL_HISTORY
CREATE TABLE CLINICAUNA."TBL_PATIENT_PERSONAL_HISTORY" (
    "ID" NUMBER(38, 0) NOT NULL ENABLE,
    "PATHOLOGICAL" VARCHAR2(256),
    "HOSPITALIZATIONS" VARCHAR2(256),
    "SURGICAL" VARCHAR2(256),
    "ALLERGIES" VARCHAR2(256),
    "TREATMENTS" VARCHAR2(256),
    "VERSION" NUMBER(38, 0) NOT NULL ENABLE,
    CONSTRAINT "TBL_PATIENT_PERSONAL_HISTORY_PK" PRIMARY KEY ("ID") USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS TABLESPACE "USERS" ENABLE
) SEGMENT CREATION DEFERRED PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING TABLESPACE "USERS";

-- TABLE TBL_PATIENT_CARE
CREATE TABLE CLINICAUNA."TBL_PATIENT_CARE" (
    "ID" NUMBER(38, 0) NOT NULL ENABLE,
    "PATIENTCAREDATE" DATE NOT NULL ENABLE,
    "PATIENTHISTORY" NUMBER(38, 0) NOT NULL ENABLE,
    "BLOODPRESSURE" VARCHAR2(8) NOT NULL ENABLE,
    "HEARTRATE" VARCHAR2(8) NOT NULL ENABLE,
    "WEIGHT" VARCHAR2(8) NOT NULL ENABLE,
    "HEIGHT" VARCHAR2(8) NOT NULL ENABLE,
    "TEMPERATURE" VARCHAR2(8) NOT NULL ENABLE,
    "BODYMASSINDEX" VARCHAR2(8) NOT NULL ENABLE,
    "BODYMASSINDEXIDEAL" VARCHAR2(8) NOT NULL ENABLE,
    "NURSINGNOTES" VARCHAR2(256),
    "REASON" VARCHAR2(256),
    "CAREPLAN" VARCHAR2(256),
    "OBSERVATIONS" VARCHAR2(256),
    "PHYSICALEXAM" VARCHAR2(256),
    "TREATMENT" VARCHAR2(256),
    "VERSION" NUMBER(38, 0) NOT NULL ENABLE,
    CONSTRAINT "TBL_MEDICAL_APPOINTMENT_DETAIL_PK" PRIMARY KEY ("ID") USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS TABLESPACE "USERS" ENABLE
) SEGMENT CREATION DEFERRED PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING TABLESPACE "USERS";

-- TABLE TBL_MEDICAL_EXAM
CREATE TABLE CLINICAUNA."TBL_MEDICAL_EXAM" (
    "ID" NUMBER(38, 0) NOT NULL ENABLE,
    "PATIENTHISTORY" NUMBER(38, 0) NOT NULL ENABLE,
    "NAME" VARCHAR2(32) NOT NULL ENABLE,
    "MEDICALEXAMDATE" DATE NOT NULL ENABLE,
    "NOTES" VARCHAR2(256),
    "VERSION" NUMBER(38, 0) NOT NULL ENABLE,
    CONSTRAINT "TBL_MEDICAL_EXAM_PK" PRIMARY KEY ("ID") USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS TABLESPACE "USERS" ENABLE,
    CONSTRAINT "TBL_MEDICAL_EXAM_NAME_UK" UNIQUE ("NAME") USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS TABLESPACE "USERS" ENABLE
) SEGMENT CREATION DEFERRED PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING TABLESPACE "USERS";

-- TABLE TBL_REPORT
CREATE TABLE CLINICAUNA."TBL_REPORT" (
    "ID" NUMBER(38, 0) NOT NULL ENABLE,
    "NAME" VARCHAR2(32) NOT NULL ENABLE,
    "DESCRIPTION" VARCHAR2(256),
    "QUERY" CLOB,
    "REPORTDATE" DATE NOT NULL ENABLE,
    "FREQUENCY" VARCHAR2(32) NOT NULL ENABLE,
    "VERSION" NUMBER(38, 0) NOT NULL ENABLE,
    CONSTRAINT "TBL_REPORT_PK" PRIMARY KEY ("ID") USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS TABLESPACE "USERS",
    CONSTRAINT "TBL_REPORT_NAME_UK" UNIQUE ("NAME") USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS TABLESPACE "USERS",
    CONSTRAINT "TBL_REPORT_FREQUENCY_CHECK" CHECK (FREQUENCY IN ('ONCE', 'DAILY', 'WEEKLY', 'MONTHLY', 'ANNUALLY')) ENABLE
) SEGMENT CREATION DEFERRED PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING;

-- TABLE TBL_REPORT_PARAMETERS
CREATE TABLE CLINICAUNA."TBL_REPORT_PARAMETERS" (
    "ID" NUMBER(38, 0) NOT NULL ENABLE,
    "REPORT" NUMBER(38, 0) NOT NULL ENABLE,
    "NAME" VARCHAR2(32) NOT NULL ENABLE,
    "VALUE" VARCHAR2(256) NOT NULL ENABLE,
    "VERSION" NUMBER(38, 0) NOT NULL ENABLE,
    CONSTRAINT "TBL_REPORT_PARAMETERS_PK" PRIMARY KEY ("ID") USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS TABLESPACE "USERS"
) SEGMENT CREATION DEFERRED PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING;

-- TABLE TBL_REPORT_RECIPIENTS
CREATE TABLE CLINICAUNA."TBL_REPORT_RECIPIENTS" (
    "ID" NUMBER(38, 0) NOT NULL ENABLE,
    "REPORT" NUMBER(38, 0) NOT NULL ENABLE,
    "EMAIL" VARCHAR2(64) NOT NULL ENABLE,
    "VERSION" NUMBER(38, 0) NOT NULL ENABLE,
    CONSTRAINT "TBL_REPORT_RECIPIENTS_PK" PRIMARY KEY ("ID") USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS TABLESPACE "USERS"
) SEGMENT CREATION DEFERRED PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING;

/**
*
* SEQUENCES
*/
-- SEQ_GENERAL_INFORMATION
CREATE SEQUENCE CLINICAUNA.SEQ_GENERAL_INFORMATION INCREMENT BY 1 MINVALUE 0 MAXVALUE 9999999999999999999999999999 NOCYCLE NOCACHE NOORDER;

-- SEQ_USER
CREATE SEQUENCE CLINICAUNA.SEQ_USER INCREMENT BY 1 MINVALUE 0 MAXVALUE 9999999999999999999999999999 NOCYCLE NOCACHE NOORDER;

-- SEQ_DOCTOR
CREATE SEQUENCE CLINICAUNA.SEQ_DOCTOR INCREMENT BY 1 MINVALUE 0 MAXVALUE 9999999999999999999999999999 NOCYCLE NOCACHE NOORDER;

-- SEQ_AGENDA
CREATE SEQUENCE CLINICAUNA.SEQ_AGENDA INCREMENT BY 1 MINVALUE 0 MAXVALUE 9999999999999999999999999999 NOCYCLE NOCACHE NOORDER;

-- SEQ_MEDICAL_APPOINTMENT
CREATE SEQUENCE CLINICAUNA.SEQ_MEDICAL_APPOINTMENT INCREMENT BY 1 MINVALUE 0 MAXVALUE 9999999999999999999999999999 NOCYCLE NOCACHE NOORDER;

-- SEQ_PATIENT
CREATE SEQUENCE CLINICAUNA.SEQ_PATIENT INCREMENT BY 1 MINVALUE 0 MAXVALUE 9999999999999999999999999999 NOCYCLE NOCACHE NOORDER;

-- SEQ_PATIENT_FAMILY_HISTORY
CREATE SEQUENCE CLINICAUNA.SEQ_PATIENT_FAMILY_HISTORY INCREMENT BY 1 MINVALUE 0 MAXVALUE 9999999999999999999999999999 NOCYCLE NOCACHE NOORDER;

-- SEQ_PATIENT_PERSONAL_HISTORY
CREATE SEQUENCE CLINICAUNA.SEQ_PATIENT_PERSONAL_HISTORY INCREMENT BY 1 MINVALUE 0 MAXVALUE 9999999999999999999999999999 NOCYCLE NOCACHE NOORDER;

-- SEQ_PATIENT_CARE
CREATE SEQUENCE CLINICAUNA.SEQ_PATIENT_CARE INCREMENT BY 1 MINVALUE 0 MAXVALUE 9999999999999999999999999999 NOCYCLE NOCACHE NOORDER;

-- SEQ_MEDICAL_EXAM
CREATE SEQUENCE CLINICAUNA.SEQ_MEDICAL_EXAM INCREMENT BY 1 MINVALUE 0 MAXVALUE 9999999999999999999999999999 NOCYCLE NOCACHE NOORDER;

-- SEQ_REPORT
CREATE SEQUENCE CLINICAUNA.SEQ_REPORT INCREMENT BY 1 MINVALUE 0 MAXVALUE 9999999999999999999999999999 NOCYCLE NOCACHE NOORDER;

-- SEQ_REPORT_PARAMETERS
CREATE SEQUENCE CLINICAUNA.SEQ_REPORT_PARAMETERS INCREMENT BY 1 MINVALUE 0 MAXVALUE 9999999999999999999999999999 NOCYCLE NOCACHE NOORDER;

-- SEQ_REPORT_RECIPIENTS
CREATE SEQUENCE CLINICAUNA.SEQ_REPORT_RECIPIENTS INCREMENT BY 1 MINVALUE 0 MAXVALUE 9999999999999999999999999999 NOCYCLE NOCACHE NOORDER;

-- TRIGGERS

-- TGR_GENERAL_INFORMATION
CREATE OR REPLACE TRIGGER TGR_GENERAL_INFORMATION BEFORE
    INSERT ON TBL_GENERAL_INFORMATION FOR EACH ROW
BEGIN
    IF :NEW.ID IS NULL OR :NEW.ID <= 0 THEN
        :NEW.ID := SEQ_GENERAL_INFORMATION.NEXTVAL;
    END IF;
END;
 -- TGR_USER
 CREATE OR REPLACE TRIGGER TGR_USER BEFORE INSERT ON TBL_USER FOR EACH ROW BEGIN IF :NEW.ID IS NULL OR :NEW.ID <= 0 THEN :NEW.ID := SEQ_USER.NEXTVAL;
END IF;
END;
 -- TGR_DOCTOR
 CREATE OR REPLACE TRIGGER TGR_DOCTOR BEFORE INSERT ON TBL_DOCTOR FOR EACH ROW BEGIN IF :NEW.ID IS NULL OR :NEW.ID <= 0 THEN :NEW.ID := SEQ_DOCTOR.NEXTVAL;
END IF;
END;
 -- TGR_AGENDA
 CREATE OR REPLACE TRIGGER TGR_AGENDA BEFORE INSERT ON TBL_AGENDA FOR EACH ROW BEGIN IF :NEW.ID IS NULL OR :NEW.ID <= 0 THEN :NEW.ID := SEQ_AGENDA.NEXTVAL;
END IF;
END;
 -- TGR_MEDICAL_APPOINTMENT
 CREATE OR REPLACE TRIGGER TGR_MEDICAL_APPOINTMENT BEFORE INSERT ON TBL_MEDICAL_APPOINTMENT FOR EACH ROW BEGIN IF :NEW.ID IS NULL OR :NEW.ID <= 0 THEN :NEW.ID := SEQ_MEDICAL_APPOINTMENT.NEXTVAL;
END IF;
END;
 -- TGR_PATIENT
 CREATE OR REPLACE TRIGGER TGR_PATIENT BEFORE INSERT ON TBL_PATIENT FOR EACH ROW BEGIN IF :NEW.ID IS NULL OR :NEW.ID <= 0 THEN :NEW.ID := SEQ_PATIENT.NEXTVAL;
END IF;
END;
 -- TGR_PATIENT_FAMILY_HISTORY
 CREATE OR REPLACE TRIGGER TGR_PATIENT_FAMILY_HISTORY BEFORE INSERT ON TBL_PATIENT_FAMILY_HISTORY FOR EACH ROW BEGIN IF :NEW.ID IS NULL OR :NEW.ID <= 0 THEN :NEW.ID := SEQ_PATIENT_FAMILY_HISTORY.NEXTVAL;
END IF;
END;
 -- TGR_PATIENT_PERSONAL_HISTORY
 CREATE OR REPLACE TRIGGER TGR_PATIENT_PERSONAL_HISTORY BEFORE INSERT ON TBL_PATIENT_PERSONAL_HISTORY FOR EACH ROW BEGIN IF :NEW.ID IS NULL OR :NEW.ID <= 0 THEN :NEW.ID := SEQ_PATIENT_PERSONAL_HISTORY.NEXTVAL;
END IF;
END;
 -- TGR_PATIENT_CARE
 CREATE OR REPLACE TRIGGER TGR_PATIENT_CARE BEFORE INSERT ON TBL_PATIENT_CARE FOR EACH ROW BEGIN IF :NEW.ID IS NULL OR :NEW.ID <= 0 THEN :NEW.ID := SEQ_PATIENT_CARE.NEXTVAL;
END IF;
END;
 -- TGR_MEDICAL_EXAM
 CREATE OR REPLACE TRIGGER TGR_MEDICAL_EXAM BEFORE INSERT ON TBL_MEDICAL_EXAM FOR EACH ROW BEGIN IF :NEW.ID IS NULL OR :NEW.ID <= 0 THEN :NEW.ID := SEQ_MEDICAL_EXAM.NEXTVAL;
END IF;
END;
 -- TGR_REPORT
 CREATE OR REPLACE TRIGGER TGR_REPORT BEFORE INSERT ON TBL_REPORT FOR EACH ROW BEGIN IF :NEW.ID IS NULL OR :NEW.ID <= 0 THEN :NEW.ID := SEQ_REPORT.NEXTVAL;
END IF;
END;
 -- TGR_REPORT_PARAMETERS
 CREATE OR REPLACE TRIGGER TGR_REPORT_PARAMETERS BEFORE INSERT ON TBL_REPORT_PARAMETERS FOR EACH ROW BEGIN IF :NEW.ID IS NULL OR :NEW.ID <= 0 THEN :NEW.ID := SEQ_REPORT_PARAMETERS.NEXTVAL;
END IF;
END;
 -- TGR_REPORT_RECIPIENTS
 CREATE OR REPLACE TRIGGER TGR_REPORT_RECIPIENTS BEFORE INSERT ON TBL_REPORT_RECIPIENTS FOR EACH ROW BEGIN IF :NEW.ID IS NULL OR :NEW.ID <= 0 THEN :NEW.ID := SEQ_REPORT_RECIPIENTS.NEXTVAL;
END IF;
END;
 /**
 *
 * COMMENTS
*/
 COMMENT ON COLUMN CLINICAUNA.TBL_USER.ROLE IS 'ROLE(ADMINISTRATOR, RECEPCIONIST, DOCTOR)';
COMMENT ON COLUMN CLINICAUNA.TBL_USER.ISACTIVE IS 'ISACTIVE(N, Y)';
COMMENT ON COLUMN CLINICAUNA.TBL_USER.ISADMIN IS 'ISADMIN(N, Y)';
COMMENT ON COLUMN CLINICAUNA.TBL_USER.LANGUAGE IS 'LANGUAGE(ENGLISH, SPANISH)';
COMMENT ON COLUMN CLINICAUNA.TBL_USER.PASSWORDCHANGED IS 'PASSWORDCHANGED(N, Y)';
COMMENT ON COLUMN CLINICAUNA.TBL_DOCTOR.SHIFTSTARTTIME IS 'SHIFTSTARTTIME(HH:MM)';
COMMENT ON COLUMN CLINICAUNA.TBL_DOCTOR.SHIFTENDTIME IS 'SHIFTENDTIME(HH:MM)';
COMMENT ON COLUMN CLINICAUNA.TBL_MEDICAL_APPOINTMENT.STATE IS 'STATE(SCHEDULED, ATTENDED, CANCELLED, ABSENT)';
COMMENT ON COLUMN CLINICAUNA.TBL_PATIENT.GENDER IS 'GENDER(MALE, FEMALE)';
COMMENT ON COLUMN CLINICAUNA.TBL_REPORT.FREQUENCY IS 'FREQUENCY(ONCE, DAILY, WEEKLY, MONTHLY, ANNUALLY)';
 /**
 *
 * ALTER TABLES
 */
 -- FK TBL_DOCTOR -> TBL_USER
 ALTER TABLE CLINICAUNA."TBL_DOCTOR" ADD CONSTRAINT "FK_TBL_DOCTOR_TO_TBL_USER" FOREIGN KEY ("ID") REFERENCES CLINICAUNA."TBL_USER" ("ID") ENABLE;
 -- FK TBL_AGENDA -> TBL_DOCTOR
 ALTER TABLE CLINICAUNA."TBL_AGENDA" ADD CONSTRAINT "FK_TBL_AGENDA_TO_TBL_DOCTOR" FOREIGN KEY ("DOCTOR") REFERENCES CLINICAUNA."TBL_DOCTOR" ("ID") ENABLE;
 -- FK TBL_MEDICAL_APPOINTMENT -> TBL_AGENDA
 ALTER TABLE CLINICAUNA."TBL_MEDICAL_APPOINTMENT" ADD CONSTRAINT "FK_TBL_APPOINTMENT_TO_TBL_AGENDA" FOREIGN KEY ("AGENDA") REFERENCES CLINICAUNA."TBL_AGENDA" ("ID") ENABLE;
 -- FK TBL_MEDICAL_APPOINTMENT -> TBL_PATIENT
 ALTER TABLE CLINICAUNA."TBL_MEDICAL_APPOINTMENT" ADD CONSTRAINT "FK_TBL_APPOINTMENT_TO_TBL_PATIENT" FOREIGN KEY ("PATIENT") REFERENCES CLINICAUNA."TBL_PATIENT" ("ID") ENABLE;
 -- FK TBL_MEDICAL_APPOINTMENT -> TBL_USER
 ALTER TABLE CLINICAUNA."TBL_MEDICAL_APPOINTMENT" ADD CONSTRAINT "FK_TBL_APPOINTMENT_TO_TBL_USER" FOREIGN KEY ("SCHEDULEDBY") REFERENCES CLINICAUNA."TBL_USER" ("ID") ENABLE;
 -- FK TBL_PATIENT_CARE -> TBL_PATIENT_PERSONAL_HISTORY
 ALTER TABLE CLINICAUNA."TBL_PATIENT_CARE" ADD CONSTRAINT "FK_TBL_PATIENT_CARE_TO_TBL_PATIENT_PERSONAL_HISTORY" FOREIGN KEY ("PATIENTHISTORY") REFERENCES CLINICAUNA."TBL_PATIENT_PERSONAL_HISTORY" ("ID") ENABLE;
 --FK TBL_MEDICAL_EXAM -> TBL_PATIENT_PERSONAL_HISTORY
 ALTER TABLE CLINICAUNA."TBL_MEDICAL_EXAM" ADD CONSTRAINT "FK_TBL_MEDICAL_EXAM_TO_TBL_PATIENT_PERSONAL_HISTORY" FOREIGN KEY ("PATIENTHISTORY") REFERENCES CLINICAUNA."TBL_PATIENT_PERSONAL_HISTORY" ("ID") ENABLE;
 -- FK TBL_PATIENT_FAMILY_HISTORY -> TBL_PATIENT
 ALTER TABLE CLINICAUNA."TBL_PATIENT_FAMILY_HISTORY" ADD CONSTRAINT "FK_TBL_PATIENT_FAMILY_HISTORY_TO_TBL_PATIENT" FOREIGN KEY ("PATIENT") REFERENCES CLINICAUNA."TBL_PATIENT" ("ID") ENABLE;
 -- FK TBL_REPORT_PARAMETERS -> TBL_REPORT
 ALTER TABLE CLINICAUNA."TBL_REPORT_PARAMETERS" ADD CONSTRAINT "FK_TBL_REPORT_PARAMETERS_TO_TBL_REPORT" FOREIGN KEY ("REPORT") REFERENCES CLINICAUNA."TBL_REPORT" ("ID") ENABLE;
 -- FK TBL_REPORT_RECIPIENTS -> TBL_REPORT
 ALTER TABLE CLINICAUNA."TBL_REPORT_RECIPIENTS" ADD CONSTRAINT "FK_TBL_REPORT_RECIPIENTS_TO_TBL_REPORT" FOREIGN KEY ("REPORT") REFERENCES CLINICAUNA."TBL_REPORT" ("ID") ENABLE;
 -- FK TBL_PATIENT -> TBL_PATIENT_PERSONAL_HISTORY
 ALTER TABLE CLINICAUNA."TBL_PATIENT_PERSONAL_HISTORY" ADD CONSTRAINT "FK_TBL_PATIENT_PERSONAL_HISTORY_TO_TBL_PATIENT" FOREIGN KEY ("ID") REFERENCES CLINICAUNA."TBL_PATIENT" ("ID") ENABLE;
 -- FK TBL_PATIENT_CARE -> TBL_MEDICAL_APPOINTMENT
 ALTER TABLE CLINICAUNA."TBL_MEDICAL_APPOINTMENT" ADD CONSTRAINT "FK_TBL_MEDICAL_APPOINTMENT_TO_TBL_PATIENT_CARE" FOREIGN KEY ("PATIENTCARE") REFERENCES CLINICAUNA."TBL_PATIENT_CARE" ("ID") ENABLE;
 /**
 *
 * ALTER TRIGGERS
 */
 ALTER TRIGGER CLINICAUNA."TGR_GENERAL_INFORMATION" ENABLE;
ALTER TRIGGER CLINICAUNA."TGR_USER" ENABLE;
ALTER TRIGGER CLINICAUNA."TGR_DOCTOR" ENABLE;
ALTER TRIGGER CLINICAUNA."TGR_AGENDA" ENABLE;
ALTER TRIGGER CLINICAUNA."TGR_MEDICAL_APPOINTMENT" ENABLE;
ALTER TRIGGER CLINICAUNA."TGR_PATIENT" ENABLE;
ALTER TRIGGER CLINICAUNA."TGR_PATIENT_FAMILY_HISTORY" ENABLE;
ALTER TRIGGER CLINICAUNA."TGR_PATIENT_PERSONAL_HISTORY" ENABLE;
ALTER TRIGGER CLINICAUNA."TGR_PATIENT_CARE" ENABLE;
ALTER TRIGGER CLINICAUNA."TGR_MEDICAL_EXAM" ENABLE;
ALTER TRIGGER CLINICAUNA."TGR_REPORT" ENABLE;
ALTER TRIGGER CLINICAUNA."TGR_REPORT_PARAMETERS" ENABLE;
ALTER TRIGGER CLINICAUNA."TGR_REPORT_RECIPIENTS" ENABLE;
 -- Activate the user
 CREATE OR REPLACE PROCEDURE ACTIVATE_USER ( USER_ID IN NUMBER ) AS
BEGIN
    UPDATE TBL_USER
    SET
        ISACTIVE = 'Y'
    WHERE
        ID = USER_ID;
    COMMIT;
END ACTIVATE_USER;
 -- Change the password
 CREATE OR REPLACE PROCEDURE CHANGE_PASSWORD ( USER_ID IN NUMBER, NEW_PASSWORD IN VARCHAR2, CHANGED_PASSWORD OUT VARCHAR2 ) AS
BEGIN
    UPDATE TBL_USER
    SET
        PASSWORD = NEW_PASSWORD,
        PASSWORDCHANGED = 'Y'
    WHERE
        ID = USER_ID;
    COMMIT;
END CHANGE_PASSWORD;
 -- Generate Random Password
 CREATE OR REPLACE PROCEDURE GENERATE_RANDOM_PASSWORD( USER_ID IN NUMBER, NEW_PASSWORD OUT VARCHAR2 ) AS
BEGIN
    NEW_PASSWORD := DBMS_RANDOM.STRING( 'x', 10 );
    UPDATE TBL_USER
    SET
        PASSWORD = NEW_PASSWORD
    WHERE
        ID = USER_ID;
    COMMIT;
END GENERATE_RANDOM_PASSWORD;